<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.fa</groupId>
    <artifactId>service_user</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>service_user</name>
    <description>Demo project for Spring Boot</description>

    <parent>
        <groupId>com.fa</groupId>
        <artifactId>MicroServiceDemo2</artifactId>
        <version>1.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <spring-cloud.version>Greenwich.M3</spring-cloud.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>

        <!-- config 配置中心客户端-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-config-client</artifactId>
        </dependency>

        <!-- lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <!-- jpa 包含Hibernate -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <!-- mybatis -->
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>1.3.2</version>
        </dependency>
        <!-- mysql -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>
        <!-- io工具 -->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.7</version>
        </dependency>
        <!-- junit -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <!-- Docker config -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${docker.plugin.version}</version>

                <configuration>
                    <imageName>${docker.registry.library}/${project.artifactId}</imageName>
                    <imageTags>
                        <imageTag>${docker.image.version}</imageTag>
                    </imageTags>
                    <baseImage>java:8</baseImage>
                    <maintainer>Eric qiheng.zhang@fa-software.com</maintainer>
                    <workdir>/root</workdir>
                    <noCache>true</noCache>
                    <exposes>
                        <expose>10010</expose>
                    </exposes>
                    <env>
                        <LANG>zh_CN.utf8</LANG>
                        <LANGUAGE>zh_CN.utf8</LANGUAGE>
                        <LC_ALL>zh_CN.utf8</LC_ALL>
                    </env>

                    <entryPoint>
                        ["java","-Djava.net.preferIPv4Stack=true","-Duser.timezone=UTC","-Djava.security.egd=file:/dev/./urandom","-jar","/app/${project.build.finalName}.jar"]
                    </entryPoint>

                    <!-- specify docker url -->
                    <dockerHost>http://192.168.66.104:2375</dockerHost>

                    <!-- copy the service's jar file from target into the root directory of the image -->
                    <resources>
                        <resource>
                            <targetPath>/app</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                        <resource>
                            <targetPath>/app/config</targetPath>
                            <directory>${basedir}/src/main/resources</directory>
                            <include>*.*</include>
                        </resource>
                    </resources>

                </configuration>

                <!-- Binding execution phase -->
                <executions>
                    <execution>
                        <id>build-image</id>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>tag-image</id>
                        <phase>package</phase>
                        <goals>
                            <goal>tag</goal>
                        </goals>
                        <configuration>
                            <image>${docker.registry.library}/${project.artifactId}:${docker.image.version}</image>
                            <newName>
                                ${docker.registry.url}/${docker.registry.library}/${project.artifactId}:${docker.image.version}
                            </newName>
                        </configuration>
                    </execution>
                </executions>

            </plugin>
        </plugins>
    </build>
</project>
