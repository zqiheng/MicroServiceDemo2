apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: baseapi
  namespace: micro_service_depoly_test
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: deployment-myapps-baseapi
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cattle.io/timestamp: 2019-01-08T10:18:34Z
      creationTimestamp: null
      labels:
        workload.user.cattle.io/workloadselector: deployment-myapps-baseapi
    spec:
      containers:
        - args:
            - java
            - -server
            - -DlogRedisAddress=192.168.1.97
            - -Dspring.cloud.consul.enabled=true
            - -Dspring.profiles.active=test
            - -jar
            - baseapi.jar
          image: ${CICD_IMAGE}:${CICD_EXECUTION_SEQUENCE}
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 9700
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 2
          name: baseapi
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 9700
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 2
            successThreshold: 2
            timeoutSeconds: 2
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities: {}
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          stdin: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          tty: true
      dnsPolicy: ClusterFirst
      imagePullSecrets:
        - name: ali
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30